-- ¿Que hay en la cabecera de HTML? --

El elemento head de un documento HTML es la parte que no se muestra en el navegador 
cuando se carga la página. Contiene información como el título (<title>) de la página, 
enlaces al CSS (si quieres aplicar estilo a tu contenido HTML con CSS), enlaces para 
personalizar favicon, y otros metadatos (datos sobre el HTML, como quién lo escribió 
y palabras claves importantes que describen el documento). En este artículo abarcaremos todo esto y más, para darte bases sólidas en el manejo del marcado y otro código que 
debería estar presente en tu cabecera.

La funcion de la cabecera es contener los metadatos del documento

-- Metadatos: El elemento <meta> --

Los metadatos son datos que describen datos, y HTML tiene una forma «oficial» de 
introducir metadatos en un documento — el elemento <meta>. Por supuesto, el resto 
de los elementos de los que hablaremos en este artículo también se podrían considerar 
metadatos. Hay muchos diferentes tipos de elementos <meta> que se pueden incluir en 
el <head> de tu página, pero no vamos a intentar explicarlos todos en esta etapa porque resultaría demasiado confuso. En lugar de ello vamos a explicar algunas cuestiones 
con las que seguramente te vas a encontrar, solo para que te hagas una idea.

La codificación de caracteres de tu documento
El ejemplo que vimos arriba incluía esta línea:

<meta charset="utf-8" />

Este elemento simplemente especifica la codificación de caracteres del documento — es decir, el conjunto de caracteres que el documento puede usar. utf-8 es un conjunto de caracteres universal que incluye casi todos los caracteres de casi cualquier idioma humano. Esto significa que tu página web podrá gestionar la visualización de cualquier idioma; 
por lo tanto, resulta una buena idea configurarlo en cada página web que crees. 
Por ejemplo, tu página podría gestionar inglés y japonés sin problemas

Si configuras tu codificación de caracteres en ISO-8859-1, por ejemplo (el juego de caracteres para el alfabeto latino), la representación de tu página puede aparecer desordenada

-- Añadir un autor y descripcion --

Muchos elementos <meta> incluyen atributos name y content:

name especifica el tipo de metadato del que se trata; es decir, qué tipo de información contiene.
content especifica el contenido del metadato en sí.
Dos de esos metadatos que resultan útiles de incluir en tu página definen al autor de la página y proporcionan una descripción concisa de la página. Veamos un ejemplo:

<meta name="author" content="Chris Mills" />
<meta
  name="description"
  content="El área de aprendizaje de MDN pretende
proporcionar a los recién llegados a la web todo lo que deben
saber para empezar a desarrollar páginas web y aplicaciones web." />

Especificar un autor resulta ventajoso por diversos motivos: es útil saber quién 
escribió la página para poder ponerte en contacto con el autor si tienes preguntas 
sobre el contenido. Algunos sistemas de gestión de contenido tienen herramientas 
para extraer automáticamente la información del autor de la página y ponerla a 
disposición para tales fines.


Especificar una descripción que incluya palabras clave relacionadas con el contenido de tu página resulta útil 
porque tiene el potencial de hacer que la página aparezca más arriba en las búsquedas relevantes que efectúan 
los motores de búsqueda (tales actividades se denominan optimizaciones del motor de búsqueda (Optimización de 
motores de búsqueda) o SEO.)

Nota: En Google verás algunas subpáginas relevantes de MDN enumeradas debajo del enlace principal a la página 
principal de MDN (se trata de los llamados sitelinks y se pueden configurar con las Herramientas de administrador de Google), una forma de mejorar los resultados para tu sitio con el motor de búsqueda de Google.

Nota: Muchas características <meta> ya no se usan. Por ejemplo, los motores de búsqueda ignoran el elemento 
<meta> (<meta name="keywords" content="pon, tus, palabras clave, aquí">), que se supone que facilita palabras 
clave para motores de búsqueda de forma que se determine la relevancia de esa página según diferentes términos 
de búsqueda, porque los spammers rellenaban la lista de palabras clave con cientos de palabras clave que sesgaban los resultados.

-- Otros tipos de metadatos --

Al navegar por la web tambien puedes encontrar otros tipos de metadatos. Muchas de las funciones que verás en los sitios web son creaciones propietarias diseñadas para proporcionar a ciertos sitios (como los sitios de redes sociales) información especifica que puedan usar

Por ejemplo, Open Graph Data es un protocolo de metadatos que Facebook inventó para proveer metadatos más ricos para los sitios web. En las fuentes de código de MDN, encontrarás esto:

<meta
  property="og:image"
  content="https://developer.mozilla.org/mdn-social-share.png" />
<meta
  property="og:description"
  content="The Mozilla Developer Network (MDN) proporciona información
sobre tecnologías Open Web, incluidas HTML, CSS y APIs para ambos sitios web
y aplicaciones HTML5. También documenta productos Mozilla, como el sistema operativo Firefox." />
<meta property="og:title" content="Mozilla Developer Network" />

Un efecto de esto es que cuando desde Facebook enlazas a un MDN, el enlace aparece con una imagen y una descripción, lo que resulta en una experencia más enriquecedora para los usuarios.


Twitter también tiene sus metadatos propios, las Twitter Cards, que tienen un efecto similar cuando la URL del sitio se muestra en twitter.com. Por ejemplo:

<meta name="twitter:title" content="Mozilla Developer Network" />

-- Agregar iconos personalizados a tu sitio --

Para enriquecer un poco más el diseño de tu sitio puedes añadir en tus metadatos referencias a iconos personalizados, que se mostrarán en determinados contextos. El más común de ellos es el favicon (abreviatura de favorite icon 
—icono «favorito», referido al uso que se le da en las listas de «favoritos» o de marcadores («bookmarks»)


El humilde favicon ha existido durante muchos años. Es el primer icono de este tipo: un icono cuadrado de 16 píxeles que se utiliza en varios lugares. Es posible que veas (según el navegador) favicons que se muestran en la pestaña del navegador que contiene cada página abierta y junto a las páginas marcadas en el panel de marcadores.

Para añadir un favicon a tu página:

Guárdalo en el mismo directorio que la página index de tu sitio, en formato .ico (la mayoría de los buscadores 
admiten favicon en los formatos más comunes como .gif o .png, pero usar el formato ICO garantiza que funcionará 
hasta en Internet Explorer 6.)

Añade la siguiente línea de referencia en el <head> de tu HTML:

<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />

There are lots of other icon types to consider these days as well. For example, you'll find this in the source code of the MDN Web Docs homepage:

<!-- third-generation iPad with high-resolution Retina display: -->
<link
  rel="apple-touch-icon"
  sizes="144x144"
  href="https://developer.mozilla.org/static/img/favicon144.png" />
<!-- iPhone with high-resolution Retina display: -->
<link
  rel="apple-touch-icon"
  sizes="114x114"
  href="https://developer.mozilla.org/static/img/favicon114.png" />
<!-- first- and second-generation iPad: -->
<link
  rel="apple-touch-icon"
  sizes="72x72"
  href="https://developer.mozilla.org/static/img/favicon72.png" />
<!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
<link
  rel="apple-touch-icon"
  href="https://developer.mozilla.org/static/img/favicon57.png" />
<!-- basic favicon -->
<link
  rel="icon"
  href="https://developer.mozilla.org/static/img/favicon32.png" />

The comments explain what each icon is used for — these elements cover things like providing a nice high resolution icon to use when the website is saved to an iPad's home screen.

Don't worry too much about implementing all these types of icon right now — this is a fairly advanced feature, 
and you won't be expected to have knowledge of this to progress through the course. The main purpose here is to 
let you know what such things are, in case you come across them while browsing other websites' source code.

Note: If your site uses a Content Security Policy (CSP) to enhance its security, the policy applies to the favicon. If you encounter problems with the favicon not loading, verify that the Content-Security-Policy header's 
img-src directive is not preventing access to it.

-- Applying JS and CSS to HTML --

Just about all websites you'll use in the modern day will employ CSS to make them look cool, and JavaScript to 
power interactive functionality, such as video players, maps, games, and more. These are most commonly applied 
to a web page using the <link> element and the <script> element, respectively.

The <link> element should always go inside the head of your document. This takes two attributes, 
rel="stylesheet", which indicates that it is the document's stylesheet, and href, which contains 
the path to the stylesheet file:

<link rel="stylesheet" href="my-css-file.css" />

The <script> element should also go into the head, and should include a src attribute containing the path to 
the JavaScript you want to load, and defer, which basically instructs the browser to load the JavaScript after 
the page has finished parsing the HTML. This is useful as it makes sure that the HTML is all loaded before the 
JavaScript runs, so that you don't get errors resulting from JavaScript trying to access an HTML element that 
doesn't exist on the page yet. There are actually a number of ways to handle loading JavaScript on your page, 
but this is the most reliable one to use for modern browsers (for others, read Script loading strategies).

<script src="my-js-file.js" defer></script>

--
 
<!-- Asíncrono -->
<script async src="script1.js"></script>

<!-- Postergado -->
<script defer src="script2.js"></script>

--

Note: The <script> element may look like a void element, but it's not, and so needs a closing tag. 
Instead of pointing to an external script file, you can also choose to put your script inside the <script> element.

-- Setting the primary language of the document --

Finally, it's worth mentioning that you can (and really should) set the language of your page. This can be done 
by adding the lang attribute to the opening HTML tag (as seen in the meta-example.html and shown below.)

<html lang="en-US">
  …
</html>


This is useful in many ways. Your HTML document will be indexed more effectively by search engines if its 
language is set (allowing it to appear correctly in language-specific results, for example), and it is useful 
to people with visual impairments using screen readers (for example, the word "six" exists in both French and 
English, but is pronounced differently.)

You can also set subsections of your document to be recognized as different languages. For example, we 
could set our Japanese language section to be recognized as Japanese, like so:

<p>Japanese example: <span lang="ja">ご飯が熱い。</span>.</p>

These codes are defined by the ISO 639-1 standard. You can find more about them in Language tags in HTML and XML


