There are six heading elements: h1, h2, h3, h4, h5, h6. Each element represents a different level of content in the document.

Implementing structural hierarchy
For example, in this story, the <h1> element represents the title of the story, the <h2> elements represent the title of each chapter, and the <h3> elements represent 
subsections of each chapter:

<h1>The Crushing Bore</h1>

<p>By Chris Mills</p>

<h2>Chapter 1: The dark night</h2>

<p>
  It was a dark night. Somewhere, an owl hooted. The rain lashed down on the…
</p>

<h2>Chapter 2: The eternal silence</h2>

<p>Our protagonist could not so much as a whisper out of the shadowy figure…</p>

<h3>The specter speaks</h3>

<p>
  Several more hours had passed, when all of a sudden the specter sat bolt
  upright and exclaimed, "Please have mercy on my soul!"
</p>


It's really up to you what the elements involved represent, as long as the hierarchy makes sense. You just need to bear in mind a few best practices as you create such structures:

Preferably, you should use a single <h1> per page—this is the top level heading, and all others sit below this in the hierarchy.
Make sure you use the headings in the correct order in the hierarchy. Don't use <h3> 
elements to represent subheadings, followed by <h2> elements to represent 
sub-subheadings—that doesn't make sense and will lead to weird results.
Of the six heading levels available, you should aim to use no more than three 
per page, unless you feel it is necessary. Documents with many levels (for example, 
a deep heading hierarchy) become unwieldy and difficult to navigate. On such occasions, it is advisable to spread the content over multiple pages if possible.

This is because there are no elements to give the content structure, so the browser does not know what is a heading and what is a paragraph. Furthermore:

Users looking at a web page tend to scan quickly to find relevant content, often just 
reading the headings, to begin with. (We usually spend a very short time on a web page.) If they can't see anything useful within a few seconds, they'll likely get 
frustrated and go somewhere else.

Search engines indexing your page consider the contents of headings as important 
keywords for influencing the page's search rankings. Without headings, your page 
will perform poorly in terms of SEO (Search Engine Optimization).

Severely visually impaired people often don't read web pages; they listen to them 
instead. This is done with software called a screen reader. This software provides 
ways to get fast access to given text content. Among the various techniques used, 
they provide an outline of the document by reading out the headings, allowing their 
users to find the information they need quickly. If headings are not available, 
they will be forced to listen to the whole document read out loud.

To style content with CSS, or make it do interesting things with JavaScript, 
you need to have elements wrapping the relevant content, so CSS/JavaScript 
can effectively target it.


On the other hand, you could make any element look like a top level heading. Consider the following:

<span style="font-size: 32px; margin: 21px 0; display: block;">
  Is this a top level heading?
</span>


This is a <span> element. It has no semantics. You use it to wrap content when you want to apply CSS to it (or do something to it with JavaScript) without giving it any extra
meaning. (You will find out more about these later on in the course.) We have applied some CSS to it to make it look a top level heading, but since it has no semantic value, it will not get any of the extra benefits described above. It is a good idea to use the relevant HTML element of the job.


-- Unordered List --
<ul>
	<li>Milk</li>
</ul>

-- Ordered List --

<ol>
	<li>Bread</li>
</ol>


-- Description --

Description lists enclose groups of terms and descriptions. Common uses for this element are implementing a glossary or displaying metada (a list of key-value pairs).
Lets cosnider some fishes with their interesting characteristics:

The list is enclosed in a <dl> element, terms are enclosed in <dt> elements, and descriptions are enclosed in <dd> elements:

<dl>
  <dt>Albacore Tuna</dt>
  <dd>The albacore is a very fast swimmer.</dd>
  <dt>Asian Carp</dt>
  <dd>Asian carp can consume 40% of their body weight in food a day!</dd>
  <dt>Barracuda</dt>
  <dd>Can grow to nearly 2 meters long!</dd>
</dl>



